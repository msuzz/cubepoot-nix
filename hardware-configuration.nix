# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/57e3e474-aefa-44d3-9a8b-d8ca6a5f056b";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/D8D8-D4CA";
      fsType = "vfat";
    };

  fileSystems."/home/michael/ironwolf" =
    { device = "/dev/disk/by-uuid/81cfbe04-5ce3-4672-a5fa-b665bcd08aa9";
      fsType = "btrfs";
    };

  fileSystems."/home/michael/crucial" =
    { device = "/dev/disk/by-uuid/50CBB5557A53739C";
      fsType = "ntfs3";
      options = [ "rw" "uid=1000" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/66f8475b-aebc-4a05-9b8b-e74e12e41e0b"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # high-resolution display - no longer has any effect as of 29/3/23
  #hardware.video.hidpi.enable = lib.mkDefault true;
}
